//GENERATED CODE====================================================================================
//  
//  Copyright Blizzard Entertainment 2003+
//  
//  ModelHints.txt generated from Model.xml using HintText.xtc
//  
//  !!! WARNING !!! This is generated code. Changes made here will be overwritten.
//  
//GENERATED CODE====================================================================================
EDSTR_ENUMHINT_e_modelFlagCloakedDetectedIsFullyVisible=Causes a model to be fully visible when cloaked to players who can detect it, as if no cloaking FX were applied to begin with.
EDSTR_ENUMHINT_e_modelFlagCloakedUndetectedIsHidden=Causes a model to be invisible to enemies when it is not detected.
EDSTR_ENUMHINT_e_modelFlagPreventClothCollisionVolumeAutoAdd=Prevents a model that is connected to another model via hosting in ActorData.xml from automatically submitting its cloth collision volumes to the 'collision set' used by cloth in the other model.
EDSTR_ENUMHINT_e_modelFlagPreventedWhenPhysicsPerformanceConstrained=Models that are purely ragdolls need to be marked with this flag, so they don't play when the game is in low performance situations.
EDSTR_ENUMHINT_e_modelFlagPreventTextureAutoUpdate=Prevents textures from dynamically updating as a result of changes to model global or scene global texture props.  This behavior can produce unexpected results for content authors who are unaware of the rules, so in some situations it is simpler to turn it off.
EDSTR_ENUMHINT_e_modelFlagPreventTextureFileTokenRecognition=Prevents texture slots and props from being automatically identified in a texture's filename.  The data must use TextureDeclare statements instead.  This can result in more data, but the data has no hidden rules and therefore causes no unexpected surprises.
EDSTR_ENUMHINT_e_modelFlagRequiresPhysicsToOperate=Marks the model as one that will not operate as intended without physics being enabled.  Accordingly, the flag prevents the model from being created without physics.  The flag can be removed to enable the model to be created regardless of whether physics is enabled, but this is likely to result in visual artifacts.  Some models with physics bodies animate and function properly even when physics is disabled.  These models should not be marked with this flag.
EDSTR_ENUMHINT_e_modelFlagTipabilityLevelOffWhenStationary=Makes the actor settle back to having no tipability when becoming stationary.
EDSTR_ENUMHINT_e_animFlagFullMatch=Playing an animation via actor message requires a set of anim props that the animation system uses to find matching animations (for example, 'Walk, Start').  This option specifies that the result animation must have associated anim props that exactly match the specified anim props, excluding variation props.  To match, an animation can have no additional anim props and cannot be missing anim props that are not in the requested set.
EDSTR_ENUMHINT_e_animFlagPlayForever=Tells the system to play the requested animation until told to stop.  If the anim is not marked as NonLooping, the system plays a randomly chosen variation of the animation every time it completes.  In this way, a Stand animation can play continuously on an idle unit, alternating randomly between different stand animation variations, to make the unit feel more like a real, living being.
EDSTR_ENUMHINT_e_animFlagNonLooping=If set, and the PlayForever flag is additionally set, this flag means that the animation should play normally, but then hold position indefinitely on the last frame.  If not set, and the PlayForever flag is set, this flag indicates that the animation should be treated as looping, and play repeatedly, choosing randomly from among that animation's variations each time it plays.
EDSTR_ENUMHINT_e_animFlagForceLooping=If set, and the PlayForever flag is additionally set, this flag means that the system plays a randomly chosen variation of the animation every time the anim completes, and no matter the anim itself is set to be looping or not.
EDSTR_ENUMHINT_e_animFlagAssetDrivenLooping=Uses the 'Looping' flag built into the asset to determine whether the animation is looping, rather than the PlayForever or NonLooping flags.
EDSTR_ENUMHINT_e_animFlagRandomStartOffset=Tells the animation to start playing at a random offset when it first begins.  Used to make a group of walking units not all walk in lockstep when commanded to move at the same time.  Instead, they all start at different points in their respective walk animations (even if playing the exact same animation), which looks more natural.
EDSTR_ENUMHINT_e_animFlagDontResetOnUnhide=The animation will not be reset when another animation that is hiding it is removed.
EDSTR_ENUMHINT_e_animFlagNoMismatchQueryProps=Playing an animation via actor message requires a set of anim props that the animation system uses to find matching animations (for example, 'Walk, Start').  This option specifies that the result animation must not have any props that aren't specified in the query anim props (disregarding variation props), but the query anim props may have anim props that are not present in the resulting animation.
EDSTR_ENUMHINT_e_animFlagVariationMatch=Requires a variation prop.  Best matches to the specified anim props without the variation, but then ensures that the result has the specified variation.  Ignored if the specified props contain no variation.
EDSTR_ENUMHINT_e_pausedParticleSystemBehaviorAutomatic=The asset itself controls how particle systems pause.  This commonly freezes the emission rate of each particle system.
EDSTR_ENUMHINT_e_pausedParticleSystemBehaviorContinuous=The particle system plays normally even as the rest of the model's animations are paused.  Not currently supported.  Works correctly on particle systems that are not also animated.
EDSTR_ENUMHINT_e_pausedParticleSystemBehaviorFade=Stops particle emission, which typically causes all remaining particles to expire shortly thereafter, giving the effect of fading out the particle system.  Useful for fading out flames and sparks, so they do not look as if they are frozen unrealistically in mid-air.
EDSTR_ENUMHINT_e_pausedParticleSystemBehaviorFreezeAll=Freezes the particle system emission rate and freezes all particles as well.  Often makes snapshots appear more visually consistent, since the rest of the model is frozen as well.  Does not necessarily look visually appealing with highly dynamic particle systems, such as showers of sparks.
EDSTR_ENUMHINT_e_pausedParticleSystemBehaviorFreezeEmissionRate=Forces the model (regardless of how the asset is set up internally) to freeze the rate at which particles are spawned to the rate at the time that all animations were paused.  Since emission rate is typically animated, this is consistent conceptually, though it is sometimes not as useful as some of the other options.
EDSTR_FIELDHINT_CModel_FuzzyGeometryPadding=Padding that is added to all fuzzy geometry collision shapes.
EDSTR_FIELDHINT_CModel_WalkAnimMoveSpeed=The number of game units per second that the walk animation is animated to, so that the unit's model doesn't get 'slippy feet' visual artifacts.  A WalkAnimMoveSpeed of 3 means the unit is animated to walk at a rate of 3 tiles per second in the default case.  (The artist creating the asset actually types a value that is 100 times this into the asset in MAX, because in that context, a tile is 100 inches.)
