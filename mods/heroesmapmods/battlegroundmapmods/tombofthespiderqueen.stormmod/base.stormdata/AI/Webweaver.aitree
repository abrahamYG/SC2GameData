<?xml version="1.0" encoding="us-ascii"?>
<tree root="D8F5032C8867BDC3">
  <node name="Root" type="Select" id="D8F5032C8867BDC3">
    <insertChild id="08020EDB50D7C99B" />
    <insertChild id="B5E874E7FAEA3A68" />
    <insertChild id="1A27DC88F9EEA88C" />
    <insertChild id="777A36DDD4E9698F" />
    <insertChild id="127D4F38FF0451E5" />
    <variable name="Lane Index" type="Integer" value="-1" />
    <variable name="Next Waypoint Index" type="Integer" value="-1" />
    <variable name="Next Way Point" type="Point" />
    <variable name="Battle Standard" type="Point" />
  </node>
  <node name="UpdateWaypoints" type="UpdateLaneVariables" id="08020EDB50D7C99B" comment="Update our battle standard and next waypoint locations">
    <property name="LaneIndex" value="Lane Index" />
    <property name="NextWaypointIndex" value="Next Waypoint Index" />
    <property name="NextWaypoint" value="Next Way Point" />
    <property name="MinRangeToWaypoint" valueSource="literal" value="4" />
    <property name="BattleStandard" value="Battle Standard" />
  </node>
  <node name="Leash" type="And" id="B5E874E7FAEA3A68" comment="If too far away from battle standard, move back to it, but still fight on the way.">
    <variable name="Battle Standard Distance" type="Number" comment="The distance the unit is to their battle standard." />
    <variable name="Leashing" type="Boolean" />
    <insertChild id="0880136D3ED7E7CF" />
    <insertChild id="AAD834581878FF02" />
  </node>
  <node name="LeashDistanceCheck" type="UnitDistance" id="0880136D3ED7E7CF" comment="Check to see if we should leash or continue leashing">
    <property name="Unit" valueSource="intrinsic" value="Self" />
    <property name="Point" valueSource="variable" value="Battle Standard" />
    <property name="AlreadyActive" value="Leashing" />
    <property name="MinRange" valueSource="literal" value="3" />
    <property name="MaxRange" valueSource="literal" value="8.5" />
    <property name="Invert" valueSource="literal" value="true" />
    <property name="OutputDistance" value="Battle Standard Distance" />
  </node>
  <node name="LeashAttackToLane" type="IfElse" id="AAD834581878FF02" comment="Attack the target if one was found, otherwise return to lane.">
    <variable name="Leash Target" type="Unit" />
    <insertChild id="DADCED3FD30CF44E" />
    <insertChild id="0C61D0BB79CD7BEC" />
    <insertChild id="448FF7F27B579614" />
  </node>
  <node name="LeashFindTarget" type="Or" id="DADCED3FD30CF44E" comment="Find a target on the way back to lane.">
    <insertChild id="FC0BD94CB589CB1D" />
    <insertChild id="1FE336354751A59C" />
  </node>
  <node name="LeashAttackStructures" type="FindBestTarget" id="FC0BD94CB589CB1D" comment="Search for nearby structures to attack. We don't need to ignore behind gate because they will be attacked first.">
    <property name="TargetTypes" valueSource="literal" value="AITargetableStructure" />
    <property name="ExcludeTypes" valueSource="literal" value="NoMinionAggro,Missile,Item,Stasis,Dead,Invulnerable,Benign" />
    <property name="RequireSameLaneForStructures" valueSource="literal" value="true" />
    <property name="MaxTargetDistance" valueSource="literal" value="6.75" />
    <property name="DistanceFactor" valueSource="literal" value="2" />
    <property name="BumpMaxDistanceToWeaponRange" valueSource="literal" value="true" />
    <property name="OutputTarget" value="Leash Target" />
    <property name="AddUnitRadiusToMaxTargetDistance" valueSource="intrinsic" value="Self" />
  </node>
  <node name="LeashAttackMinionsToLane" type="FindBestTarget" id="1FE336354751A59C" comment="Only attack minions closer to our battle standard than us. We don't need to ignore behind gate because we are far from lane (leashing).">
    <property name="TargetTypes" valueSource="literal" value="Minion" />
    <property name="ExcludeTypes" valueSource="literal" value="NoMinionAggro,Missile,Stasis,Dead,Invulnerable,Benign,Summoned" />
    <property name="MaxTargetDistance" valueSource="literal" value="4.75" />
    <property name="DistanceFactor" valueSource="literal" value="2" />
    <property name="ClipCenter" valueSource="variable" value="Battle Standard" />
    <property name="ClipRadius" valueSource="variable" value="Battle Standard Distance" />
    <property name="BumpMaxDistanceToWeaponRange" valueSource="literal" value="true" />
    <property name="OutputTarget" value="Leash Target" />
    <property name="AddUnitRadiusToMaxTargetDistance" valueSource="intrinsic" value="Self" />
  </node>
  <node name="LeashAttackTarget" type="Attack" id="0C61D0BB79CD7BEC" comment="Attack the target if one was found.">
    <property name="TargetUnit" valueSource="variable" value="Leash Target" />
  </node>
  <node name="LeashToLane" type="MoveToPoint" id="448FF7F27B579614" comment="Move back to our battle standard">
    <property name="Target" valueSource="variable" value="Next Way Point" />
    <property name="Acquire" valueSource="literal" value="false" />
  </node>
  <node name="AttackInLane" type="And" id="1A27DC88F9EEA88C" comment="Find a target and attack it.">
    <variable name="Attack Target" type="Unit" />
    <insertChild id="E4B7A77BB453816B" />
    <insertChild id="262152294EDC28E5" />
  </node>
  <node name="AttackFindTarget" type="Or" id="E4B7A77BB453816B" comment="Find a target to attack in lane.">
    <insertChild id="FE1EDD3E7C3715C2" />
    <insertChild id="C8F3934BAC26E25B" />
    <insertChild id="880577F738EA8A0E" />
  </node>
  <node name="AttackStructures" type="FindBestTarget" id="FE1EDD3E7C3715C2" comment="Search for nearby structures to attack. We don't need to ignore behind gate because they will be attacked first.">
    <property name="RequireSameLaneForStructures" valueSource="literal" value="true" />
    <property name="TargetTypes" valueSource="literal" value="AITargetableStructure" />
    <property name="ExcludeTypes" valueSource="literal" value="NoMinionAggro,Missile,Item,Stasis,Dead,Invulnerable,Benign" />
    <property name="MaxTargetDistance" valueSource="literal" value="10" />
    <property name="DistanceFactor" valueSource="literal" value="2" />
    <property name="BumpMaxDistanceToWeaponRange" valueSource="literal" value="true" />
    <property name="OutputTarget" value="Attack Target" />
    <property name="AddUnitRadiusToMaxTargetDistance" valueSource="intrinsic" value="Self" />
  </node>
  <node name="AttackMinions" type="FindBestTarget" id="C8F3934BAC26E25B" comment="Search for nearby minions to attack">
    <property name="TargetTypes" valueSource="literal" value="Minion" />
    <property name="ExcludeTypes" valueSource="literal" value="NoMinionAggro,Missile,Stasis,Dead,Invulnerable,Benign,Summoned" />
    <property name="FilterTargetsBehindGate" valueSource="literal" value="false" />
    <property name="MaxTargetDistance" valueSource="literal" value="4.75" />
    <property name="DistanceFactor" valueSource="literal" value="2" />
    <property name="BumpMaxDistanceToWeaponRange" valueSource="literal" value="true" />
    <property name="OutputTarget" value="Attack Target" />
    <property name="AddUnitRadiusToMaxTargetDistance" valueSource="intrinsic" value="Self" />
  </node>
  <node name="WaitForStasisStructures" type="FindBestTarget" id="880577F738EA8A0E" comment="Search for nearby stasis structures and move to attack range then hold.">
    <property name="RequireSameLaneForStructures" valueSource="literal" value="true" />
    <property name="TargetTypes" valueSource="literal" value="AITargetableStructure" />
    <property name="RequiredTypes" valueSource="literal" value="Stasis" />
    <property name="ExcludeTypes" valueSource="literal" value="NoMinionAggro,Missile,Dead" />
    <property name="MaxTargetDistance" valueSource="literal" value="6.75" />
    <property name="DistanceFactor" valueSource="literal" value="2" />
    <property name="BumpMaxDistanceToWeaponRange" valueSource="literal" value="true" />
    <property name="OutputTarget" value="Attack Target" />
    <property name="AddUnitRadiusToMaxTargetDistance" valueSource="intrinsic" value="Self" />
  </node>
  <node name="AttackAttemptAbilityOrAttack" type="IfElse" id="262152294EDC28E5">
    <insertChild id="D66477E91BA55B0A" />
    <insertChild id="103519273DD2808A" />
    <insertChild id="9C61B0C8F35B4CFD" />
  </node>
  <node name="AttackTargetUnitIsValidStructure" type="And" id="D66477E91BA55B0A">
    <insertChild id="E87704C1FE5CEDB8" />
    <insertChild id="564FA826331B1DF0" />
  </node>
  <node name="AttackTargetUnitIsStructure" type="UnitTargetFilter" id="E87704C1FE5CEDB8">
    <property name="Filters" valueSource="literal" value="AITargetableStructure" />
    <property name="Target" valueSource="variable" value="Attack Target" />
  </node>
  <node name="AttackTargetNotStasis" type="Not" id="564FA826331B1DF0">
    <insertChild id="22A0D0441E8170E6" />
  </node>
  <node name="AttackTargetStasis" type="UnitTargetFilter" id="22A0D0441E8170E6">
    <property name="Filters" valueSource="literal" value="Stasis" />
    <property name="Target" valueSource="variable" value="Attack Target" />
  </node>
  <node name="AttackUseAbilityOrAttack" type="Select" id="103519273DD2808A">
    <insertChild id="745E0354C12DF72E" />
    <insertChild id="D3D36970A8E9325C" />
  </node>
  <node name="AttackUseBossAbilityOnStructure" type="Ability" id="745E0354C12DF72E">
    <property name="Ability" valueSource="literal" value="SoulEaterDeathWave" />
    <property name="TargetUnit" valueSource="variable" value="Attack Target" />
  </node>
  <node name="AttackAttackTargetStructure" type="Attack" id="D3D36970A8E9325C" comment="Attack the target if one was found.">
    <property name="TargetUnit" valueSource="variable" value="Attack Target" />
  </node>
  <node name="AttackTarget" type="Attack" id="9C61B0C8F35B4CFD" comment="Attack the target if one was found.">
    <property name="TargetUnit" valueSource="variable" value="Attack Target" />
  </node>
  <node name="Advance" type="MoveToPoint" id="777A36DDD4E9698F" comment="Move towards our next waypoint.">
    <property name="Target" valueSource="variable" value="Next Way Point" />
    <property name="Acquire" valueSource="literal" value="true" />
  </node>
  <node name="HoldPosition" type="MoveToUnit" id="127D4F38FF0451E5" comment="If we can't path to the way point or the hero, just hang out">
    <property name="Target" valueSource="intrinsic" value="Self" />
    <property name="Acquire" valueSource="literal" value="true" />
    <property name="HoldIfInRange" valueSource="literal" value="true" />
  </node>
</tree>